package test;

interface MakerOf[#T] {
	static make() #T;
}

class Foo is MakerOf[Foo] {
	static make() Foo {
		return new();
	}
}

class Box[#T | #T is MakerOf[#T]] is MakerOf[Box[#T]] {
	var thing #T;

	static make() Box[#T] {
		return new(thing = #T.make());
	}
}

class Test {
	static main() Unit {
		var n Box[Foo] = Box[Foo].make();
	}
}

